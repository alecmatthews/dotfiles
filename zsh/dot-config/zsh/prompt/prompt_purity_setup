#!/bin/zsh
# Purity prompt setup using the zsh "prompt" user contribution
# https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#Prompt-Themes

prompt_purity_help () {
  cat <<'EOF'
This is my fun little prompt :)
EOF
}

prompt_purity_setup () {
  prompt_opts=(cr sp percent)

  local git_prompt_prefix=' %F{red}λ%f:'
  # Setup vcs_info
  autoload -Uz vcs_info
  zstyle ':vcs_info:*' enable git
  zstyle ':vcs_info:git:*' formats "$git_prompt_prefix%b %m"
  zstyle ':vcs_info:git*+set-message:*' hooks git-message

  add-zsh-hook precmd prompt_purity_precmd

  PS1='%(?..%F{red}%? )%F{white}%1~ %B%F{blue}>%f%b '
}

+vi-git-message () {
  local git_prompt_dirty='%F{blue}*%f'
  local git_prompt_untracked='%F{white}•%f'
  local git_prompt_behind='%F{magenta}↓%f'
  local git_prompt_diverged='%F{magenta}↕%f'
  local git_prompt_ahead='%F{magenta}↑%f'

  local dirty_inc=''
  local untracked_inc=''
  local remote_inc=''

  local rstat="$(git status --porcelain=v2 --branch 2>/dev/null)"
  [[ -z "$rstat" ]] && return

  # Check for dirty (changes to index/working tree)
  [[ -n "$(awk '/^[12u]/' <<<"$rstat")" ]] && dirty_inc="$git_prompt_dirty"

  # Check for untracked files
  [[ -n "$(awk '/^\?/' <<<"$rstat")" ]] && untracked_inc="$git_prompt_untracked"

  # Check for ahead/behind
  local remote="$(awk '/^# branch\.ab/ { gsub(/[+-]/, ""); print  $3,$4 }' <<<"$rstat")"
  case "$remote" in
    ''|'0 0')
      ;;
    '0 '*)
      remote_inc="$git_prompt_behind";;
    *' 0')
      remote_inc="$git_prompt_ahead";;
    *)
      remote_inc="$git_prompt_diverged";;
  esac

  hook_com[misc]="[ ${remote_inc}${dirty_inc}${untracked_inc} ]"
}

prompt_purity_precmd () {
  vcs_info

  RPS1=''
  [[ -n "$vcs_info_msg_0_" ]] && RPS1="$vcs_info_msg_0_"
}

prompt_purity_setup "@"
